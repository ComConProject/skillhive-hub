create table if not exists
  public.provinces (
    id integer generated by default as identity primary key,
    lo text not null,
    en text not null,
    is_active bool default true
  );

create table if not exists
  public.districts (
    id integer generated by default as identity primary key,
    lo text not null,
    en text not null,
    is_active bool default true,
    prov_id integer references provinces (id)
  );

create table if not exists
  public.villages (
    id integer generated by default as identity primary key,
    lo text not null,
    en text not null,
    is_active bool default true,
    dist_id integer references districts (id)
  );

CREATE TABLE IF NOT EXISTS public.direct_chat_rooms (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    seller_id INT4 REFERENCES public.freelancer(id),
    buyer_id UUID,
    created_at TIMESTAMPTZ DEFAULT now(),
    seller_name TEXT,
    buyer_name TEXT
);


CREATE TABLE IF NOT EXISTS public.freelancer (
    id INT8 PRIMARY KEY,
    created_at TIMESTAMPTZ DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now(),
    firstname TEXT,
    lastname TEXT,
    phone TEXT,
    email TEXT,
    is_available BOOL DEFAULT true,
    username TEXT,
    profile_url TEXT,
    user_id UUID DEFAULT auth.uid(),
    description TEXT,
    freelancer_role TEXT,
    village_id INT4
);

CREATE TABLE IF NOT EXISTS public.freelancer_occupation (
    id INT8 PRIMARY KEY,
    seller_id INT8,
    term_id INT4 REFERENCES public.term(id),
    description VARCHAR,
    created_at TIMESTAMPTZ DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now()
);

CREATE TABLE IF NOT EXISTS public.term (
    id INT4 PRIMARY KEY,
    name VARCHAR
    group_id INT4
    parent_id INT4 REFERENCES public.term(id),
    active bool,
    created_at TIMESTAMPTZ DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now()
)

CREATE TABLE IF NOT EXISTS public.skill(
    id integer generated by default as identity primary key,
    name TEXT,
    description TEXT,
    level_id INT4 REFERENCES public.term(id)
    created_at TIMESTAMPTZ DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now()
    freelancer_id INT8 REFERENCES public.freelancer(id)
)
-- language
CREATE TABLE IF NOT EXISTS public.language(
    id integer generated by default as identity primary key,
    name TEXT,
    term_id INT4 REFERENCES public.term(id),
    freelancer_id INT8 REFERENCES public.freelancer(id)
    created_at TIMESTAMPTZ DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now()
)
-- messages
CREATE TABLE IF NOT EXISTS public.messages(
    id integer generated by default as identity primary key,
    user_id INT8,
    room_id UUID,
    content TEXT,
    created_at TIMESTAMPTZ DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now(),
    direct_chat_rooms_id UUID REFERENCES public.direct_chat_rooms(id)
)

-- notification
CREATE TABLE IF NOT EXISTS public.notification(
    id integer generated by default as identity primary key,
    user_id INT8 REFERENCES public.freelancer(id),
    message TEXT,
    action_user_id UUID,
    is_read bool default false,
    url TEXT,
    title TEXT,
    options JSONB,
    type_app TEXT,
    created_at TIMESTAMPTZ DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now()
)

-- order
CREATE TABLE IF NOT EXISTS public.order(
    id integer generated by default as identity primary key,
    price numeric,
    detail text,
    on_date date,
    created_at TIMESTAMPTZ DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now(),
    user_id UUID,
    pricing_id INT4 REFERENCES public.pricing(id),
    code TEXT,
    status_id INT4 REFERENCES public.term(id),
    buyer_id UUID,
    metadata JSONB,
    customer TEXT,
    customer_email TEXT,
    freelancer_id int8 references public.freelancer(id),
    freelancer_uuid UUID
)

-- payment
CREATE TABLE IF NOT EXISTS public.payment(
    id integer generated by default as identity primary key,
    amount numeric,
    method text,
    status text,
    on_date date,
    refund_info text,
    description text,
    order_id int8 references public.order(id),
    created_at TIMESTAMPTZ DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now()
    metadata JSONB
)

-- portfolio
CREATE TABLE IF NOT EXISTS public.portfolio(
    id integer generated by default as identity primary key,
    title text,
    description text,
    created_at TIMESTAMPTZ DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now(),
    freelancer_id int8 references public.freelancer(id),
    url text
)